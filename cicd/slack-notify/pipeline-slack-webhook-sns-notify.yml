AWSTemplateFormatVersion: 2010-09-09
Description: Creates a CodePipeline pipeline that deploys all github changes to an S3 bucket and sends pipeline execution notifications to SNS. Sends notifications to Slack. Uses GitHub version 2 source action.

Parameters:
  pBucketName:
    Type: String
    Description: Name of the S3 bucket to deploy new changes to.
    ConstraintDescription: "Please specify the Bucket name."

  pRepoName:
    Type: String
    Description: Name of the repository.
    ConstraintDescription: "Please specify the Repository name."

  pBranchName:
    Type: String
    Description: Name of the branch that commits will trigger the pipeline.
    Default: master
    ConstraintDescription: "Please specify the Branch name."

  pCodeStarConnection:
    Type: String
    Description: ARN of the CodeStar connection
    ConstraintDescription: "Please specify the CodeStar connection ARN."
    
  pRepoOwner:
    Type: String
    Description: Repository Owner Name. If the repo owner is an organization, enter organization name.
    ConstraintDescription: "Please specify the Repository Owner name"

  pStageNamePrefix:
    Type: String
    Description: Prefix to give for manual approval stage names
    AllowedValues:
      - PROD
      - DEV
    ConstraintDescription: "Please specify an environment tag"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      pBucketName:
        default: Bucket Name
      pRepoOwner:
        default: Repository Owner
      pRepoName:
        default: Repository Name
      pCodeStarConnection:
        default: CodeStar connection ARN
      pBranchName:
        default: Branch Name
      pNotificationEmailEndpoint:
        default: CodePipeline Notification Email Endpoint
      pStageNamePrefix:
        default: Stage Name Prefix

    ParameterGroups:
      - Label:
          default: Notification Rule Settings
        Parameters:
          - pNotificationEmailEndpoint
      - Label:
          default: CodePipeline Source Provider Settings
        Parameters:
          - pCodeStarConnection
          - pRepoOwner
          - pRepoName
          - pBranchName
      - Label:
          default: CodePipeline Deployment Provider Settings
        Parameters:
          - pBucketName

Resources:

  # CodePipeline IAM Role
  codePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub codepipeline-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: s3Artifacts
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: 
                  - !Sub "arn:aws:s3:::${s3ArtifactBucketCodePipeline}"
                  - !Sub "arn:aws:s3:::${s3ArtifactBucketCodePipeline}/*"
        - PolicyName: s3DeploymentBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: 
                  - !Sub "arn:aws:s3:::${pBucketName}"
                  - !Sub "arn:aws:s3:::${pBucketName}/*"
        - PolicyName: codeStarConnection
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: "*"

  codePipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties: 
      Name: !Sub ${AWS::StackName} # c303-prod-faststak-cloudformation-cicd
      RoleArn: !GetAtt codePipelineServiceRole.Arn
      Stages: 
        - Name: Source
          Actions: 
            - Name: SourceAction
              # Variables to be referenced in other Actions. Ex: #{SourceVariables.CommitId} https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-variables.html
              Namespace: SourceVariables
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:

                # CodeStar connection ARN
                ConnectionArn: !Ref pCodeStarConnection
                
                # Owner and Name of the repository ex: some-user/my-repo
                FullRepositoryId: !Sub ${pRepoOwner}/${pRepoName}
                BranchName: !Ref pBranchName
                OutputArtifactFormat: CODE_ZIP

                # trigger the pipeline on every new commit
                DetectChanges: true
              OutputArtifacts:
                - Name: SourceOutput 
        - Name: !Sub ${pStageNamePrefix}-Approval
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                CustomData: "Please approve this change. Commit message: #{SourceVariables.CommitMessage}"
                ExternalEntityLink: !Sub "https://github.com/${pRepoOwner}/${pRepoName}/commit/#{SourceVariables.CommitId}"
        - Name: !Sub ${pStageNamePrefix}-Deploy
          Actions:
            - Name: S3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref pBucketName
                Extract: true
              InputArtifacts:
                - Name: SourceOutput
      ArtifactStore: 
        Type: S3 
        Location: !Ref s3ArtifactBucketCodePipeline
        # default encryption is used
        # EncryptionKey:
        #   Id: arn:aws:kms:useast-1:ACCOUNT-ID:key/KEY-ID
        #   Type: KMS

  s3ArtifactBucketCodePipeline:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-artifacts-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256



  lambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Sample Lambda # Change this
      Runtime: python3.9
      Role: !GetAtt lambdaRole.Arn
      Environment:
        Variables:
          ACCOUNT_ID: !Sub ${AWS::AccountId}
      Handler: index.handler
      Timeout: 240
      Code:
        ZipFile: !Sub |
          import boto3
          import json

          def handler(event, context):
              print(json.dumps(event))
              execution_id = event['detail']['execution-id']

              category = event['detail']['type']['category']
              state = event['detail']['state']

              
              if category == "Source"
                  if state == "SUCCEEDED":
                      send_started()
                  elif state == "FAILED":
                      send_failed()

              if category == "Approval"
                  if state == "STARTED":
                      send_approval_needed()
                  elif state == "SUCCEEDED":
                      send_approved()
                  elif state == "FAILED":
                      send_approval_reject()
              
              if category == "Build":
                  if state == "STARTED"
                      send_build_started()
                  elif state == "SUCCEEDED":
                      send_build_success()
                  elif state == "FAILED":
                      send_build_failed()
              
              if category == "Deploy":
                  if state == "STARTED":
                      send_deploy_started()
                  elif state == "SUCCEEDED":
                      send_deploy_success()
                  elif state == "FAILED":
                      send_deploy_failed()
                      






  permissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref lambdaFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: 
        !GetAtt eventBridgeRule.Arn

  eventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: CodePipelineStateChangeRule
      EventPattern:
        source:
          - aws.codepipeline
        detail-type:
          - CodePipeline Pipeline Execution State Change
          - CodePipeline Action Execution State Change
        detail:
          state:
            - STARTED
            - SUCCEEDED
            - FAILED
            - CANCELED
          type:
            category:
              - Source
              - Approval
              - Build
              - Deploy

        resources:
          - !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${codePipeline}"
      Targets:
        - Arn: !GetAtt lambdaFunction.Arn
          Id: targetFunction

  lambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: "*"

  lambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${lambdaFunction}
      RetentionInDays: 90
























  # # Trigger notifications to SNS
  # codePipelineNotificationRule:
  #   DependsOn: 
  #     - codePipeline
  #     - snsTopic
  #   Type: AWS::CodeStarNotifications::NotificationRule
  #   Properties:
  #     # Name must be unique
  #     Name: !Sub ${pRepoName}-${AWS::Region}
  #     DetailType: FULL
  #     EventTypeIds:
  #       # - codepipeline-pipeline-pipeline-execution-started
  #       - codepipeline-pipeline-action-execution-started
  #       - codepipeline-pipeline-action-execution-succeeded
  #       - codepipeline-pipeline-action-execution-failed
  #       - codepipeline-pipeline-manual-approval-needed
  #       - codepipeline-pipeline-manual-approval-failed
  #       - codepipeline-pipeline-manual-approval-succeeded


  #     # ARN of the Resource to associate the notification rule with.
  #     Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${codePipeline}"
  #     Status: ENABLED
      
  #     # ARN of AWS Chatbot clients or SNS topics
  #     Targets: 
  #       - TargetType: SNS
  #         TargetAddress: !Ref snsTopic
  #     # Tags: Json
  


  # snsTopic:
  #   Type: AWS::SNS::Topic
  #   Properties:
  #     TopicName: !Sub cicd-event-notifications
  #     # KmsMasterKeyId: alias/aws/sns
  #     Subscription:
  #       - Endpoint: !GetAtt lambdaFunction.Arn
  #         Protocol: lambda

  # snsTopicPolicy:
  #   Type: AWS::SNS::TopicPolicy
  #   Properties:
  #     PolicyDocument:
  #       Statement:
  #         - Sid: CodeNotification_publish
  #           Effect: Allow
  #           Principal:
  #             Service: codestar-notifications.amazonaws.com
  #           Action: SNS:Publish
  #           Resource: !Ref snsTopic
  #     Topics:
  #       - !Ref snsTopic

  # permissionForSnsToInvokeLambda: 
  #   Type: AWS::Lambda::Permission
  #   Properties: 
  #     FunctionName: !Ref lambdaFunction
  #     Action: lambda:InvokeFunction
  #     Principal: sns.amazonaws.com
  #     SourceArn: 
  #       !Ref snsTopic

Outputs:

  pipeline:
    Description: CodePipeline CI/CD pipeline Name
    Value: !Ref codePipeline

  pipelineServiceRole:
    Description: CodePipeline IAM Service Role
    Value: !GetAtt codePipelineServiceRole.Arn

  Version:
    Description: Template Version
    Value: pipeline-deploy-s3-sns-0.1
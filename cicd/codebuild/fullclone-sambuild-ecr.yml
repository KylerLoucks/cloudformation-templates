AWSTemplateFormatVersion: 2010-09-09
Description: > 
  Github V2 Source action, Build ECR Images, and deploy with SAM CLI


Parameters:

  # CodePipeline

  pApplicationName:
    Type: String
    Description: Used to name CI/CD resources.
    Default: ephemeral

  # GitHub Repo

  pRepoOwner:
    Type: String
    Description: Owner not username. If the repo owner is an organization, enter organization name.
    Default: KylerLoucks

  pRepoName:
    Type: String 
    Default: my-github-repo

  pCodestarConnectionArn:
    Type: String
    Description: ARN of the CodeStar Connection.
    Default: arn:aws:codestar-connections:us-east-1:313588322221:connection/e6cec00c-84fd-4370-b355-5291eaa602bc

  pTriggerBranch:
    Type: String
    Description: Branch to trigger CodePipeline off of.
    Default: master

  # CodeBuild

  pCodeBuildComputeType:
    Type: String
    Description: CodeBuild Compute Type
    Default: BUILD_GENERAL1_SMALL
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE

  pCodeBuildImage:
    Type: String
    Description: Base image used by CodeBuild
    Default: aws/codebuild/amazonlinux2-x86_64-standard:3.0

  pBuildSpecPath:
    Type: String
    Description: Path and name for the Buildspec in repo
    Default: buildspec.yml



  # Tagging

  pEnvironmentTag:
    Type: String
    Description: Environment Tag for default resource tagging
    Default: development
    AllowedValues:
      - production
      - staging
      - sandbox
      - test
      - development
      - qa

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      pApplicationName:
        default: Application Name
      pRepoOwner:
        default: GitHub Repository Owner
      pRepoName:
        default: GitHub Repository Name
      pCodestarConnectionArn:
        default: Codestar Connection Arn
      pTriggerBranch:
        default: GitHub Trigger Branch
      pCodeBuildComputeType:
        default: CodeBuild Compute Type
      pCodeBuildImage:
        default: CodeBuild Docker Image
      pBuildSpecPath:
        default: Buildspec file path
      pEnvironmentTag:
        default: Environment Tag  

    ParameterGroups:
      - Label:
          default: CodePipeline Settings
        Parameters:
          - pApplicationName
      - Label:
          default: CodePipeline Source Settings
        Parameters:
          - pRepoOwner
          - pRepoName
          - pCodestarConnectionArn
          - pTriggerBranch
      - Label:
          default: CodeBuild Settings
        Parameters:
          - pCodeBuildComputeType
          - pCodeBuildImage
          - pBuildSpecPath
          # - pBaseEcrRepo  
          # - pBaseImageTag
      - Label:
          default: Tagging
        Parameters:
          - pEnvironmentTag

Resources:

  # IAM Role - CodeBuild

  codeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${pApplicationName}-build-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${pApplicationName}-build
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${pApplicationName}-build:*
        - PolicyName: S3ArtifactBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub "arn:aws:s3:::${artifactBucket}"
                  - !Sub "arn:aws:s3:::${artifactBucket}/*"
        - PolicyName: GitCloneConnection
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: 
                  - !Ref pCodestarConnectionArn
        # - PolicyName: ECR
        #   PolicyDocument:
        #     Version: 2012-10-17
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #           - ecr:PutLifecyclePolicy
        #           - ecr:PutImageTagMutability
        #           - ecr:PutImageScanningConfiguration
        #           - ecr:BatchGetImage
        #           - ecr:CompleteLayerUpload
        #           - ecr:DescribeImages
        #           - ecr:TagResource
        #           - ecr:ListTagsForResource
        #           - ecr:UploadLayerPart
        #           - ecr:InitiateLayerUpload
        #           - ecr:BatchCheckLayerAvailability
        #           - ecr:PutImage
        #         Resource:
        #           - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${pEcrRepo}
        # - PolicyName: BASE-ECR  
        #   PolicyDocument: 
        #     Version: 2012-10-17 
        #     Statement:  
        #       - Effect: Allow 
        #         Action: 
        #           - ecr:BatchGetImage 
        #           - ecr:DescribeImages  
        #           - ecr:ListTagsForResource 
        #           - ecr:GetDownloadUrlForLayer
        #         Resource: 
        #           - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${pBaseEcrRepo}
        - PolicyName: ECR-Token
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                Resource: "*"


  codeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${pApplicationName}-build
      Artifacts:
        Type: CODEPIPELINE
      Description: CodeBuild Project
      Environment:
        ComputeType: !Ref pCodeBuildComputeType
        Image: !Ref pCodeBuildImage
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: PULL_REQUEST_ID
            Value: "#{variables.PR_ID}"
            Type: PLAINTEXT
          - Name: COMMIT_ID
            Value: "#{variables.COMMIT_ID}"
            Type: PLAINTEXT
          - Name: PR_EVENT
            Value: "#{variables.PR_EVENT}"
            Type: PLAINTEXT
          - Name: ACCOUNT_ID
            Value: !Ref "AWS::AccountId"
            Type: PLAINTEXT
          # - Name: CONTAINER_NAME
          #   Value: !Ref pContainerName
          #   Type: PLAINTEXT
          # - Name: BASE_IMAGE_REPO_NAME  
          #   Value: !Ref pBaseEcrRepo  
          #   Type: PLAINTEXT 
          # - Name: BASE_IMAGE_TAG 
          #   Value: !Ref pBaseImageTag 
          #   Type: PLAINTEXT
      ServiceRole: !GetAtt codeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref pBuildSpecPath
      TimeoutInMinutes: 60
      
  # IAM Role - CodePipeline    

  codePipelineServiceRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${pApplicationName}-pipeline-role
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - codepipeline.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: s3Artifacts
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                    - s3:GetObject
                    - s3:GetObjectVersion
                  Resource: 
                    - !Sub "arn:aws:s3:::${artifactBucket}"
                    - !Sub "arn:aws:s3:::${artifactBucket}/*"
          - PolicyName: codeBuildTrigger
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - codebuild:BatchGetBuilds
                    - codebuild:StartBuild
                    - codebuild:BatchGetBuildBatches
                    - codebuild:StartBuildBatch
                  Resource: 
                    - !GetAtt codeBuildProject.Arn
                - Effect: Allow
                  Action:
                    - codestar-connections:UseConnection
                  Resource: 
                    - "*"
          - PolicyName: ecsUpdate
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - ecs:*
                    - ecr:*
                  Resource:
                    - "*"
          - PolicyName: iamPassRole
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - iam:PassRole
                  Resource: 
                    - "*"
          

      
 # CodePipeline

  artifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${pApplicationName}-pipeline-artifacts-${AWS::AccountId}-${AWS::Region}
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: environment
          Value: !Ref pEnvironmentTag

  codePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref artifactBucket
        Type: S3
      Name: !Sub ${pApplicationName}-pipeline
      RoleArn: !GetAtt codePipelineServiceRole.Arn
      PipelineType: V2
      RestartExecutionOnUpdate: false
      Variables:
        - Name: PR_ID
          Description: Pull Request ID
        - Name: COMMIT_ID
          Description: Commit Hash
        - Name: PR_EVENT
          Description: 'Type of PR event. Valid values: [opened, synchronize, reopened, closed]'
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              Namespace: SourceVariables
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                FullRepositoryId: !Sub ${pRepoOwner}/${pRepoName}
                ConnectionArn: !Ref pCodestarConnectionArn
                BranchName: !Ref pTriggerBranch
                DetectChanges: false
                OutputArtifactFormat: CODEBUILD_CLONE_REF # Code Build Git Full Clone
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                CustomData: "Approve ephemeral deployment. Pull Request#: #{variables.PR_ID}"
                # ExternalEntityLink: !Sub "https://github.com/${pRepoOwner}/${pRepoName}/commit/#{SourceVariables.CommitId}"
              RunOrder: 1

            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref codeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 2

Outputs:

  Version:
    Description: Template Version
    Value: pipeline-build-ecs-0.1

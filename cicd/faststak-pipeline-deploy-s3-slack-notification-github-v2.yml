AWSTemplateFormatVersion: 2010-09-09
Description: Creates a CodePipeline pipeline that deploys all github repo changes to an S3 bucket and sends pipeline execution notifications to slack. Uses GitHub version 2 source action.

Parameters:
  pBucketName:
    Type: String
    Description: Name of the S3 bucket to deploy new changes to.
    ConstraintDescription: "Please specify the Bucket name."

  pRepoName:
    Type: String
    Description: Name of the repository.
    ConstraintDescription: "Please specify the Repository name."

  pBranchName:
    Type: String
    Description: Name of the branch that commits will trigger the pipeline.
    Default: master
    ConstraintDescription: "Please specify the Branch name."

  pCodeStarConnection:
    Type: String
    Description: ARN of the CodeStar connection
    ConstraintDescription: "Please specify the CodeStar connection ARN."
    
  pRepoOwner:
    Type: String
    Description: Repository Owner Name. If the repo owner is an organization, enter organization name.
    ConstraintDescription: "Please specify the Repository Owner name"

  pSlackWorkspaceId:
    Type: String
    Description: ID of the Slack workspace. Found in the Chatbot client we manually created in the AWS ChatBot Console
    ConstraintDescription: "Please specify the Slack Workspace ID"

  pSlackChannelId:
    Type: String
    Description: ID of the Slack channel to send notifications to. Open slack, right click channel name > Copy > Copy link. ID is random digit string at the end of the URL.
    ConstraintDescription: "Please specify the Slack Channel ID"

  pStageNamePrefix:
    Type: String
    Description: Prefix to give for manual approval stage names
    AllowedValues:
      - PROD
      - DEV
    ConstraintDescription: "Please specify an environment tag"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      pBucketName:
        default: Bucket Name
      pRepoOwner:
        default: Repository Owner
      pRepoName:
        default: Repository Name
      pCodeStarConnection:
        default: CodeStar connection ARN
      pBranchName:
        default: Branch Name
      pSlackWorkspaceId:
        default: Slack Workspace ID
      pSlackChannelId:
        default: Slack Channel ID
      pStageNamePrefix:
        default: Stage Name Prefix

    ParameterGroups:
      - Label:
          default: AWS Chatbot Settings
        Parameters:
          - pSlackWorkspaceId
          - pSlackChannelId
      - Label:
          default: CodePipeline Source Provider Settings
        Parameters:
          - pCodeStarConnection
          - pRepoOwner
          - pRepoName
          - pBranchName
      - Label:
          default: CodePipeline Deployment Provider Settings
        Parameters:
          - pBucketName

Resources:

  # CodePipeline IAM Role
  codePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub codepipeline-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: s3Artifacts
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: 
                  - !Sub "arn:aws:s3:::${s3ArtifactBucketCodePipeline}"
                  - !Sub "arn:aws:s3:::${s3ArtifactBucketCodePipeline}/*"
        - PolicyName: s3DeploymentBucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource: 
                  - !Sub "arn:aws:s3:::${pBucketName}"
                  - !Sub "arn:aws:s3:::${pBucketName}/*"
        - PolicyName: codeStarConnection
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: "*"

  codePipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties: 
      Name: !sub ${AWS::StackName} # c303-prod-faststak-cloudformation-cicd
      RoleArn: !GetAtt codePipelineServiceRole.Arn
      Stages: 
        - Name: Source
          Actions: 
            - Name: SourceAction
              # Variables to be referenced in other Actions. Ex: #{SourceVariables.CommitId} https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-variables.html
              Namespace: SourceVariables
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:

                # CodeStar connection ARN
                ConnectionArn: !Ref pCodeStarConnection
                
                # Owner and Name of the repository ex: some-user/my-repo
                FullRepositoryId: !Sub ${pRepoOwner}/${pRepoName}
                BranchName: !Ref pBranchName
                OutputArtifactFormat: CODE_ZIP

                # trigger the pipeline on every new commit
                DetectChanges: true
              OutputArtifacts:
                - Name: SourceOutput 
        - Name: !Sub ${pStageNamePrefix}-Approval
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: 1
              Configuration:
                CustomData: "Please approve this change. Commit message: #{SourceVariables.CommitMessage}"
                ExternalEntityLink: !Sub "https://github.com/${pRepoOwner}/${pRepoName}/commit/#{SourceVariables.CommitId}"
        - Name: !Sub ${pStageNamePrefix}-Deploy
          Actions:
            - Name: S3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                BucketName: !Ref pBucketName
                Extract: true
              InputArtifacts:
                - Name: SourceOutput
      ArtifactStore: 
        Type: S3 
        Location: !Ref s3ArtifactBucketCodePipeline
        # default encryption is used
        # EncryptionKey:
        #   Id: arn:aws:kms:useast-1:ACCOUNT-ID:key/KEY-ID
        #   Type: KMS

  s3ArtifactBucketCodePipeline:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-artifacts-${AWS::Region}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # Trigger notifications to Slack
  codePipelineNotificationRule:
    DependsOn: 
      - codePipeline
    Type: AWS::CodeStarNotifications::NotificationRule
    Properties:
      # Name must be unique
      Name: !Sub ${pRepoName}-${AWS::Region}
      DetailType: FULL
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-started
        - codepipeline-pipeline-manual-approval-needed
        - codepipeline-pipeline-manual-approval-failed
        - codepipeline-pipeline-manual-approval-succeeded

      # ARN of the Resource to associate the notification rule with.
      Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${codePipeline}"
      Status: ENABLED
      
      # ARN of AWS Chatbot clients or SNS topics
      Targets: 
        - TargetType: AWSChatbotSlack
          TargetAddress: !Ref chatBot
      # Tags: Json
  
  # IAM role for Chatbot to call AWS APIs
  chatBotIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub AWSChatbot-role-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - chatbot.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ChatbotNotificationsOnly
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:Describe*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                Resource: "*"

  # Requires additonal setup in the console (Create Chatbot client manually in AWS console)
  chatBot:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties: 
      ConfigurationName: cloudformation-templates-repository
      IamRoleArn: !GetAtt chatBotIAMRole.Arn
      # LoggingLevel: String

      # Open slack, right click channel name choose Copy Link. ID is random digit string at the end of the URL.
      # If the slack channel is Private, invite the AWS Chatbot to the channel
      SlackChannelId: !Ref pSlackChannelId

      # Copy the workspace ID from the Chatbot client manually created in the AWS ChatBot Client Console
      SlackWorkspaceId: !Ref pSlackWorkspaceId
      UserRoleRequired: false


Outputs:

  pipeline:
    Description: CodePipeline CI/CD pipeline Name
    Value: !Ref codePipeline

  pipelineServiceRole:
    Description: CodePipeline IAM Service Role
    Value: !GetAtt codePipelineServiceRole.Arn
    
  chatBotArn:
    Description: AWS Chatbot ARN
    Value: !Ref chatBot
  
  chatBotChannelRole:
    Description: AWS Chatbot IAM Role for Chatbot to perform AWS CLI commands
    Value: !GetAtt chatBotIAMRole.Arn

  Version:
    Description: Template Version
    Value: pipeline-deploy-s3-0.2